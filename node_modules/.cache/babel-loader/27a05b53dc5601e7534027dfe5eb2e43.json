{"ast":null,"code":"import { failLoading } from \"../../dish/actions\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { normolize } from \"../../utils/normolize\";\nimport { REVIEWS_ACTIONS, startLoading, successLoading } from \"../actions\";\nexport const loadReviewsIfNotExist = store => next => action => {\n  var _restaurantDishIds;\n\n  if (action.type !== REVIEWS_ACTIONS.loadReview) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload\n  });\n  const loadedReviewIds = sele(store.getState()) || [];\n\n  if ((_restaurantDishIds = restaurantDishIds) !== null && _restaurantDishIds !== void 0 && _restaurantDishIds.every(restaurantDishId => loadedDishIds.includes(restaurantDishId))) {\n    return;\n  }\n\n  store.dispatch(startLoading());\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`).then(response => response.json()).then(reviews => {\n    console.log(reviews, 'REVIEWS');\n    store.dispatch(successLoading(normolize(reviews)));\n  }).catch(() => {\n    console.log(\"error REVIEWS\");\n    store.dispatch(failLoading());\n  });\n};","map":{"version":3,"names":["failLoading","selectReviewsByRestaurantId","normolize","REVIEWS_ACTIONS","startLoading","successLoading","loadReviewsIfNotExist","store","next","action","type","loadReview","restaurantReviewIds","getState","restaurantId","payload","loadedReviewIds","sele","restaurantDishIds","every","restaurantDishId","loadedDishIds","includes","dispatch","fetch","then","response","json","reviews","console","log","catch"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/review/middleware/loadReviewsIfNotExist.js"],"sourcesContent":["import { failLoading } from \"../../dish/actions\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { normolize } from \"../../utils/normolize\";\nimport { REVIEWS_ACTIONS, startLoading, successLoading } from \"../actions\"\n\nexport const loadReviewsIfNotExist = (store) => (next) => (action) => {\n  if(action.type !== REVIEWS_ACTIONS.loadReview) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload,\n  });\n  const loadedReviewIds = sele(store.getState()) || [];\n\n  if (\n    restaurantDishIds?.every((restaurantDishId) =>\n      loadedDishIds.includes(restaurantDishId)\n    )\n  ) {\n    return;\n  }\n\n\n  store.dispatch(startLoading());\n\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`)\n    .then((response) => response.json())\n    .then ((reviews) => {\n        console.log(reviews, 'REVIEWS');\n        store.dispatch(successLoading(normolize(reviews)))\n    })\n    .catch(()=> {\n      console.log(\"error REVIEWS\");\n      store.dispatch(failLoading());\n    }) \n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,cAAxC,QAA8D,YAA9D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;EAAA;;EACpE,IAAGA,MAAM,CAACC,IAAP,KAAgBP,eAAe,CAACQ,UAAnC,EAA+C;IAC7CH,IAAI,CAACC,MAAD,CAAJ;IACA;EACD;;EAED,MAAMG,mBAAmB,GAAGX,2BAA2B,CAACM,KAAK,CAACM,QAAN,EAAD,EAAmB;IACxEC,YAAY,EAAEL,MAAM,CAACM;EADmD,CAAnB,CAAvD;EAGA,MAAMC,eAAe,GAAGC,IAAI,CAACV,KAAK,CAACM,QAAN,EAAD,CAAJ,IAA0B,EAAlD;;EAEA,0BACEK,iBADF,+CACE,mBAAmBC,KAAnB,CAA0BC,gBAAD,IACvBC,aAAa,CAACC,QAAd,CAAuBF,gBAAvB,CADF,CADF,EAIE;IACA;EACD;;EAGDb,KAAK,CAACgB,QAAN,CAAenB,YAAY,EAA3B;EAEAoB,KAAK,CAAE,wCAAuCf,MAAM,CAACM,OAAQ,EAAxD,CAAL,CACGU,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEUG,OAAD,IAAa;IAChBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,SAArB;IACArB,KAAK,CAACgB,QAAN,CAAelB,cAAc,CAACH,SAAS,CAAC0B,OAAD,CAAV,CAA7B;EACH,CALH,EAMGG,KANH,CAMS,MAAK;IACVF,OAAO,CAACC,GAAR,CAAY,eAAZ;IACAvB,KAAK,CAACgB,QAAN,CAAevB,WAAW,EAA1B;EACD,CATH;AAUD,CAhCM"},"metadata":{},"sourceType":"module"}