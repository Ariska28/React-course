{"ast":null,"code":"import { normolize } from \"../../utils/normolize\";\nimport { selectReviewsIds } from \"../selectors\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { loadReviews, reviewSlice } from \"..\";\nexport const loadReviewsIfNotExist = (dispatch, getState) => {\n  if (action.type !== loadReviews.type) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload\n  });\n  const loadedReviewIds = selectReviewsIds(store.getState()) || [];\n\n  if (restaurantReviewIds !== null && restaurantReviewIds !== void 0 && restaurantReviewIds.every(restaurantReviewId => loadedReviewIds.includes(restaurantReviewId))) {\n    return;\n  }\n\n  store.dispatch(reviewSlice.actions.startLoading());\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`).then(response => response.json()).then(reviews => {\n    console.log(reviews);\n    store.dispatch(reviewSlice.actions.successLoading(normolize(reviews)));\n  }).catch(() => {\n    console.log(\"error\");\n    store.dispatch(reviewSlice.actions.failLoading());\n  });\n};","map":{"version":3,"names":["normolize","selectReviewsIds","selectReviewsByRestaurantId","loadReviews","reviewSlice","loadReviewsIfNotExist","dispatch","getState","action","type","next","restaurantReviewIds","store","restaurantId","payload","loadedReviewIds","every","restaurantReviewId","includes","actions","startLoading","fetch","then","response","json","reviews","console","log","successLoading","catch","failLoading"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/review/middlewares/loadReviewsIfNotExist.js"],"sourcesContent":["import { normolize } from \"../../utils/normolize\";\nimport { selectReviewsIds } from \"../selectors\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { loadReviews, reviewSlice } from \"..\";\n\nexport const loadReviewsIfNotExist = (dispatch, getState) => {\n  if (action.type !== loadReviews.type) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload,\n  });\n  const loadedReviewIds = selectReviewsIds(store.getState()) || [];\n\n  if (\n    restaurantReviewIds?.every((restaurantReviewId) =>\n      loadedReviewIds.includes(restaurantReviewId)\n    )\n  ) {\n    return;\n  }\n\n  store.dispatch(reviewSlice.actions.startLoading());\n\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`)\n    .then((response) => response.json())\n    .then((reviews) => {\n      console.log(reviews);\n      store.dispatch(reviewSlice.actions.successLoading(normolize(reviews)));\n    })\n    .catch(() => {\n      console.log(\"error\");\n      store.dispatch(reviewSlice.actions.failLoading());\n    });\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,IAAzC;AAEA,OAAO,MAAMC,qBAAqB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAC3D,IAAIC,MAAM,CAACC,IAAP,KAAgBN,WAAW,CAACM,IAAhC,EAAsC;IACpCC,IAAI,CAACF,MAAD,CAAJ;IACA;EACD;;EAED,MAAMG,mBAAmB,GAAGT,2BAA2B,CAACU,KAAK,CAACL,QAAN,EAAD,EAAmB;IACxEM,YAAY,EAAEL,MAAM,CAACM;EADmD,CAAnB,CAAvD;EAGA,MAAMC,eAAe,GAAGd,gBAAgB,CAACW,KAAK,CAACL,QAAN,EAAD,CAAhB,IAAsC,EAA9D;;EAEA,IACEI,mBADF,aACEA,mBADF,eACEA,mBAAmB,CAAEK,KAArB,CAA4BC,kBAAD,IACzBF,eAAe,CAACG,QAAhB,CAAyBD,kBAAzB,CADF,CADF,EAIE;IACA;EACD;;EAEDL,KAAK,CAACN,QAAN,CAAeF,WAAW,CAACe,OAAZ,CAAoBC,YAApB,EAAf;EAEAC,KAAK,CAAE,wCAAuCb,MAAM,CAACM,OAAQ,EAAxD,CAAL,CACGQ,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,OAAD,IAAa;IACjBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;IACAb,KAAK,CAACN,QAAN,CAAeF,WAAW,CAACe,OAAZ,CAAoBS,cAApB,CAAmC5B,SAAS,CAACyB,OAAD,CAA5C,CAAf;EACD,CALH,EAMGI,KANH,CAMS,MAAM;IACXH,OAAO,CAACC,GAAR,CAAY,OAAZ;IACAf,KAAK,CAACN,QAAN,CAAeF,WAAW,CAACe,OAAZ,CAAoBW,WAApB,EAAf;EACD,CATH;AAUD,CA/BM"},"metadata":{},"sourceType":"module"}