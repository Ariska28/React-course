{"ast":null,"code":"import { normolize } from \"../../utils/normolize\";\nimport { selectReviewsIds } from \"../selectors\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { loadReviews, reviewSlice } from \"..\";\nexport const loadReviewsIfNotExist = restaurantId => (dispatch, getState) => {\n  const restaurantReviewIds = selectReviewsByRestaurantId(getState(), {\n    restaurantId\n  });\n  const loadedReviewIds = selectReviewsIds(getState()) || [];\n\n  if (restaurantReviewIds !== null && restaurantReviewIds !== void 0 && restaurantReviewIds.every(restaurantReviewId => loadedReviewIds.includes(restaurantReviewId))) {\n    return;\n  }\n\n  dispatch(reviewSlice.actions.startLoading());\n  fetch(`http://localhost:3001/api/reviews?id=${restaurantId}`).then(response => response.json()).then(reviews => {\n    console.log(reviews);\n    dispatch(reviewSlice.actions.successLoading(normolize(reviews)));\n  }).catch(() => {\n    console.log(\"error\");\n    dispatch(reviewSlice.actions.failLoading());\n  });\n};","map":{"version":3,"names":["normolize","selectReviewsIds","selectReviewsByRestaurantId","loadReviews","reviewSlice","loadReviewsIfNotExist","restaurantId","dispatch","getState","restaurantReviewIds","loadedReviewIds","every","restaurantReviewId","includes","actions","startLoading","fetch","then","response","json","reviews","console","log","successLoading","catch","failLoading"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/review/middlewares/loadReviewsIfNotExist.js"],"sourcesContent":["import { normolize } from \"../../utils/normolize\";\nimport { selectReviewsIds } from \"../selectors\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { loadReviews, reviewSlice } from \"..\";\n\nexport const loadReviewsIfNotExist = (restaurantId) => (dispatch, getState) => {\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(getState(), {\n    restaurantId\n  });\n  const loadedReviewIds = selectReviewsIds(getState()) || [];\n\n  if (\n    restaurantReviewIds?.every((restaurantReviewId) =>\n      loadedReviewIds.includes(restaurantReviewId)\n    )\n  ) {\n    return;\n  }\n\n  dispatch(reviewSlice.actions.startLoading());\n\n  fetch(`http://localhost:3001/api/reviews?id=${restaurantId}`)\n    .then((response) => response.json())\n    .then((reviews) => {\n      console.log(reviews);\n      dispatch(reviewSlice.actions.successLoading(normolize(reviews)));\n    })\n    .catch(() => {\n      console.log(\"error\");\n      dispatch(reviewSlice.actions.failLoading());\n    });\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,IAAzC;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,YAAD,IAAkB,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAE7E,MAAMC,mBAAmB,GAAGP,2BAA2B,CAACM,QAAQ,EAAT,EAAa;IAClEF;EADkE,CAAb,CAAvD;EAGA,MAAMI,eAAe,GAAGT,gBAAgB,CAACO,QAAQ,EAAT,CAAhB,IAAgC,EAAxD;;EAEA,IACEC,mBADF,aACEA,mBADF,eACEA,mBAAmB,CAAEE,KAArB,CAA4BC,kBAAD,IACzBF,eAAe,CAACG,QAAhB,CAAyBD,kBAAzB,CADF,CADF,EAIE;IACA;EACD;;EAEDL,QAAQ,CAACH,WAAW,CAACU,OAAZ,CAAoBC,YAApB,EAAD,CAAR;EAEAC,KAAK,CAAE,wCAAuCV,YAAa,EAAtD,CAAL,CACGW,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,OAAD,IAAa;IACjBC,OAAO,CAACC,GAAR,CAAYF,OAAZ;IACAb,QAAQ,CAACH,WAAW,CAACU,OAAZ,CAAoBS,cAApB,CAAmCvB,SAAS,CAACoB,OAAD,CAA5C,CAAD,CAAR;EACD,CALH,EAMGI,KANH,CAMS,MAAM;IACXH,OAAO,CAACC,GAAR,CAAY,OAAZ;IACAf,QAAQ,CAACH,WAAW,CAACU,OAAZ,CAAoBW,WAApB,EAAD,CAAR;EACD,CATH;AAUD,CA3BM"},"metadata":{},"sourceType":"module"}