{"ast":null,"code":"import { DISH_ACTIONS } from \"../actions\";\nimport { failLoading, startLoading, successLoading } from \"../actions\";\nimport { normolize } from \"../../utils/normolize\";\nimport { selectDishsIds } from \"../selectors\";\nimport { selectMenuByRestaurantId } from \"../../restaurant/selectors\";\nexport const loadDishesIfNotExist = store => next => action => {\n  if (action.type !== DISH_ACTIONS.loadDishes) {\n    next(action);\n    return;\n  }\n\n  const restaurantDishIds = selectMenuByRestaurantId(store.getState(), {\n    restaurantId: action.payload\n  });\n  const loadedDishIds = selectDishsIds(store.getState()) || [];\n\n  if (restaurantDishIds !== null && restaurantDishIds !== void 0 && restaurantDishIds.every(restaurantDishId => loadedDishIds.includes(restaurantDishId))) {\n    return;\n  }\n\n  store.dispatch(startLoading());\n  fetch(`http://localhost:3001/api/products?id=${action.payload}`).then(response => response.json()).then(dishes => {\n    console.log(dishes);\n    store.dispatch(successLoading(normolize(dishes)));\n  }).catch(() => {\n    console.log(\"error\");\n    store.dispatch(failLoading());\n  });\n};","map":{"version":3,"names":["DISH_ACTIONS","failLoading","startLoading","successLoading","normolize","selectDishsIds","selectMenuByRestaurantId","loadDishesIfNotExist","store","next","action","type","loadDishes","restaurantDishIds","getState","restaurantId","payload","loadedDishIds","every","restaurantDishId","includes","dispatch","fetch","then","response","json","dishes","console","log","catch"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/dish/middlewares/loadDishesIfNotExist.js"],"sourcesContent":["import { DISH_ACTIONS } from \"../actions\";\nimport { failLoading, startLoading, successLoading } from \"../actions\";\nimport { normolize } from \"../../utils/normolize\";\nimport { selectDishsIds } from \"../selectors\";\nimport { selectMenuByRestaurantId } from \"../../restaurant/selectors\";\n\nexport const loadDishesIfNotExist = (store) => (next) => (action) => {\n  if (action.type !== DISH_ACTIONS.loadDishes) {\n    next(action);\n    return;\n  }\n\n  const restaurantDishIds = selectMenuByRestaurantId(store.getState(), {\n    restaurantId: action.payload,\n  });\n  \n  const loadedDishIds = selectDishsIds(store.getState()) || [];\n\n  if (\n    restaurantDishIds?.every((restaurantDishId) =>\n      loadedDishIds.includes(restaurantDishId)\n    )\n  ) {\n    return;\n  }\n\n  store.dispatch(startLoading());\n\n  fetch(`http://localhost:3001/api/products?id=${action.payload}`)\n    .then((response) => response.json())\n    .then((dishes) => {\n      console.log(dishes);\n      store.dispatch(successLoading(normolize(dishes)));\n    })\n    .catch(() => {\n      console.log(\"error\");\n      store.dispatch(failLoading());\n    });\n};\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,YAA7B;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,cAApC,QAA0D,YAA1D;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;EACnE,IAAIA,MAAM,CAACC,IAAP,KAAgBX,YAAY,CAACY,UAAjC,EAA6C;IAC3CH,IAAI,CAACC,MAAD,CAAJ;IACA;EACD;;EAED,MAAMG,iBAAiB,GAAGP,wBAAwB,CAACE,KAAK,CAACM,QAAN,EAAD,EAAmB;IACnEC,YAAY,EAAEL,MAAM,CAACM;EAD8C,CAAnB,CAAlD;EAIA,MAAMC,aAAa,GAAGZ,cAAc,CAACG,KAAK,CAACM,QAAN,EAAD,CAAd,IAAoC,EAA1D;;EAEA,IACED,iBADF,aACEA,iBADF,eACEA,iBAAiB,CAAEK,KAAnB,CAA0BC,gBAAD,IACvBF,aAAa,CAACG,QAAd,CAAuBD,gBAAvB,CADF,CADF,EAIE;IACA;EACD;;EAEDX,KAAK,CAACa,QAAN,CAAenB,YAAY,EAA3B;EAEAoB,KAAK,CAAE,yCAAwCZ,MAAM,CAACM,OAAQ,EAAzD,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,MAAD,IAAY;IAChBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACAlB,KAAK,CAACa,QAAN,CAAelB,cAAc,CAACC,SAAS,CAACsB,MAAD,CAAV,CAA7B;EACD,CALH,EAMGG,KANH,CAMS,MAAM;IACXF,OAAO,CAACC,GAAR,CAAY,OAAZ;IACApB,KAAK,CAACa,QAAN,CAAepB,WAAW,EAA1B;EACD,CATH;AAUD,CAhCM"},"metadata":{},"sourceType":"module"}