{"ast":null,"code":"import { failLoading, RESTAURANT_ACTIONS, startLoading, successLoading } from \"../actions\";\nimport { normolize } from \"../../utils/normolize\";\nimport { selectRestaurantIds } from \"../selectors\";\nexport const loadRestaurantsIfNotExist = store => next => action => {\n  var _selectRestaurantIds;\n\n  if (action.type !== RESTAURANT_ACTIONS.loadRestaurants) {\n    next(action);\n    return;\n  }\n\n  if (((_selectRestaurantIds = selectRestaurantIds(store.getState())) === null || _selectRestaurantIds === void 0 ? void 0 : _selectRestaurantIds.length) > 0) {\n    crossOriginIsolated.log;\n    return;\n  }\n\n  store.dispatch(startLoading());\n  fetch(\"http://localhost:3001/api/restaurants/\").then(response => response.json()).then(restaurants => {\n    console.log(restaurants);\n    store.dispatch(successLoading(normolize(restaurants)));\n  }).catch(() => {\n    console.log(\"error\");\n    store.dispatch(failLoading());\n  });\n};","map":{"version":3,"names":["failLoading","RESTAURANT_ACTIONS","startLoading","successLoading","normolize","selectRestaurantIds","loadRestaurantsIfNotExist","store","next","action","type","loadRestaurants","getState","length","crossOriginIsolated","log","dispatch","fetch","then","response","json","restaurants","console","catch"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/restaurant/middlewares/loadRestaurantsIfNotExist.js"],"sourcesContent":["import {\n  failLoading,\n  RESTAURANT_ACTIONS,\n  startLoading,\n  successLoading,\n} from \"../actions\";\nimport { normolize } from \"../../utils/normolize\";\nimport { selectRestaurantIds } from \"../selectors\";\n\nexport const loadRestaurantsIfNotExist = (store) => (next) => (action) => {\n  if (action.type !== RESTAURANT_ACTIONS.loadRestaurants) {\n    next(action);\n    return;\n  }\n\n  if (selectRestaurantIds(store.getState())?.length > 0) {\n    crossOriginIsolated.log\n    return;\n  }\n\n  store.dispatch(startLoading());\n\n  fetch(\"http://localhost:3001/api/restaurants/\")\n    .then((response) => response.json())\n    .then((restaurants) => {\n      console.log(restaurants);\n      store.dispatch(successLoading(normolize(restaurants)));\n    })\n    .catch(() => {\n      console.log(\"error\");\n      store.dispatch(failLoading());\n    });\n};\n"],"mappings":"AAAA,SACEA,WADF,EAEEC,kBAFF,EAGEC,YAHF,EAIEC,cAJF,QAKO,YALP;AAMA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,mBAAT,QAAoC,cAApC;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;EAAA;;EACxE,IAAIA,MAAM,CAACC,IAAP,KAAgBT,kBAAkB,CAACU,eAAvC,EAAwD;IACtDH,IAAI,CAACC,MAAD,CAAJ;IACA;EACD;;EAED,IAAI,yBAAAJ,mBAAmB,CAACE,KAAK,CAACK,QAAN,EAAD,CAAnB,8EAAuCC,MAAvC,IAAgD,CAApD,EAAuD;IACrDC,mBAAmB,CAACC,GAApB;IACA;EACD;;EAEDR,KAAK,CAACS,QAAN,CAAed,YAAY,EAA3B;EAEAe,KAAK,CAAC,wCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,WAAD,IAAiB;IACrBC,OAAO,CAACP,GAAR,CAAYM,WAAZ;IACAd,KAAK,CAACS,QAAN,CAAeb,cAAc,CAACC,SAAS,CAACiB,WAAD,CAAV,CAA7B;EACD,CALH,EAMGE,KANH,CAMS,MAAM;IACXD,OAAO,CAACP,GAAR,CAAY,OAAZ;IACAR,KAAK,CAACS,QAAN,CAAehB,WAAW,EAA1B;EACD,CATH;AAUD,CAvBM"},"metadata":{},"sourceType":"module"}