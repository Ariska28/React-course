{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { reviewReducer } from \"./review/reducer\";\nimport { loadReviewsIfNotExist } from \"./review/middlewares/loadReviewsIfNotExist\";\nimport { loadUsersIfNotExist } from \"./user/middlewares/loadUsersIfNotExist\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { dishSlice } from \"./dish\";\nimport { userSlice } from \"./user\";\nimport { cartSlice } from \"./cart\";\nimport { restaurantSlice } from \"./restaurant\";\nconst rootReducer = combineReducers({\n  cart: cartSlice.reducer,\n  restaurant: restaurantSlice.reducer,\n  dish: dishSlice.reducer,\n  review: review,\n  user: userSlice.reducer\n});\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), loadReviewsIfNotExist, loadUsersIfNotExist],\n  devTools: true\n}); // export const store = createStore(\n//   rootReducer,\n//   applyMiddleware(\n//     loggerMiddleware,\n//     loadRestaurantsIfNotExist,\n//     loadDishesIfNotExist,\n//     loadReviewsIfNotExist,\n//     loadUsersIfNotExist\n//   )\n// );\n// store\n// dispatch ==action==> middleware ==action==> reducer(action)","map":{"version":3,"names":["combineReducers","reviewReducer","loadReviewsIfNotExist","loadUsersIfNotExist","configureStore","dishSlice","userSlice","cartSlice","restaurantSlice","rootReducer","cart","reducer","restaurant","dish","review","user","store","middleware","getDefaultMiddleware","devTools"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/index.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { reviewReducer } from \"./review/reducer\";\nimport { loadReviewsIfNotExist } from \"./review/middlewares/loadReviewsIfNotExist\";\nimport { loadUsersIfNotExist } from \"./user/middlewares/loadUsersIfNotExist\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { dishSlice } from \"./dish\";\nimport { userSlice } from \"./user\";\nimport { cartSlice } from \"./cart\";\nimport { restaurantSlice } from \"./restaurant\";\n\nconst rootReducer = combineReducers({\n  cart: cartSlice.reducer,\n  restaurant: restaurantSlice.reducer,\n  dish: dishSlice.reducer,\n  review: review,\n  user: userSlice.reducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    loadReviewsIfNotExist,\n    loadUsersIfNotExist,\n  ],\n  devTools: true,\n});\n\n// export const store = createStore(\n//   rootReducer,\n//   applyMiddleware(\n//     loggerMiddleware,\n//     loadRestaurantsIfNotExist,\n//     loadDishesIfNotExist,\n//     loadReviewsIfNotExist,\n//     loadUsersIfNotExist\n//   )\n// );\n\n// store\n// dispatch ==action==> middleware ==action==> reducer(action)\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,qBAAT,QAAsC,4CAAtC;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;AAEA,MAAMC,WAAW,GAAGT,eAAe,CAAC;EAClCU,IAAI,EAAEH,SAAS,CAACI,OADkB;EAElCC,UAAU,EAAEJ,eAAe,CAACG,OAFM;EAGlCE,IAAI,EAAER,SAAS,CAACM,OAHkB;EAIlCG,MAAM,EAAEA,MAJ0B;EAKlCC,IAAI,EAAET,SAAS,CAACK;AALkB,CAAD,CAAnC;AAQA,OAAO,MAAMK,KAAK,GAAGZ,cAAc,CAAC;EAClCO,OAAO,EAAEF,WADyB;EAElCQ,UAAU,EAAGC,oBAAD,IAA0B,CACpC,GAAGA,oBAAoB,EADa,EAEpChB,qBAFoC,EAGpCC,mBAHoC,CAFJ;EAOlCgB,QAAQ,EAAE;AAPwB,CAAD,CAA5B,C,CAUP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}