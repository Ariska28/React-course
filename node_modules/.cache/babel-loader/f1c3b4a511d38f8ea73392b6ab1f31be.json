{"ast":null,"code":"import { failLoading } from \"../../dish/actions\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { normolize } from \"../../utils/normolize\";\nimport { REVIEWS_ACTIONS, startLoading, successLoading } from \"../actions\";\nimport { selectReviewsIds } from \"../selectors\";\nexport const loadReviewsIfNotExist = store => next => action => {\n  if (action.type !== REVIEWS_ACTIONS.loadReview) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload\n  });\n  const loadedReviewIds = selectReviewsIds(store.getState()) || [];\n\n  if (restaurantReviewIds !== null && restaurantReviewIds !== void 0 && restaurantReviewIds.every(restaurantReviewId => loadedReviewIds.includes(restaurantReviewId))) {\n    return;\n  }\n\n  store.dispatch(startLoading());\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`).then(response => response.json()).then(reviews => {\n    console.log(reviews, 'REVIEWS');\n    store.dispatch(successLoading(normolize(reviews)));\n  }).catch(() => {\n    console.log(\"error REVIEWS\");\n    store.dispatch(failLoading());\n  });\n};","map":{"version":3,"names":["failLoading","selectReviewsByRestaurantId","normolize","REVIEWS_ACTIONS","startLoading","successLoading","selectReviewsIds","loadReviewsIfNotExist","store","next","action","type","loadReview","restaurantReviewIds","getState","restaurantId","payload","loadedReviewIds","every","restaurantReviewId","includes","dispatch","fetch","then","response","json","reviews","console","log","catch"],"sources":["/Users/Arina.Karmanova/Documents/react-2022-09-22/src/store/review/middleware/loadReviewsIfNotExist.js"],"sourcesContent":["import { failLoading } from \"../../dish/actions\";\nimport { selectReviewsByRestaurantId } from \"../../restaurant/selectors\";\nimport { normolize } from \"../../utils/normolize\";\nimport { REVIEWS_ACTIONS, startLoading, successLoading } from \"../actions\"\nimport { selectReviewsIds } from \"../selectors\";\n\nexport const loadReviewsIfNotExist = (store) => (next) => (action) => {\n  if(action.type !== REVIEWS_ACTIONS.loadReview) {\n    next(action);\n    return;\n  }\n\n  const restaurantReviewIds = selectReviewsByRestaurantId(store.getState(), {\n    restaurantId: action.payload,\n  });\n  const loadedReviewIds = selectReviewsIds(store.getState()) || [];\n\n  if (\n    restaurantReviewIds?.every((restaurantReviewId) =>\n      loadedReviewIds.includes(restaurantReviewId)\n    )\n  ) {\n    return;\n  }\n\n\n  store.dispatch(startLoading());\n\n  fetch(`http://localhost:3001/api/reviews?id=${action.payload}`)\n    .then((response) => response.json())\n    .then ((reviews) => {\n        console.log(reviews, 'REVIEWS');\n        store.dispatch(successLoading(normolize(reviews)))\n    })\n    .catch(()=> {\n      console.log(\"error REVIEWS\");\n      store.dispatch(failLoading());\n    }) \n}"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B;AACA,SAASC,2BAAT,QAA4C,4BAA5C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,cAAxC,QAA8D,YAA9D;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAYC,IAAD,IAAWC,MAAD,IAAY;EACpE,IAAGA,MAAM,CAACC,IAAP,KAAgBR,eAAe,CAACS,UAAnC,EAA+C;IAC7CH,IAAI,CAACC,MAAD,CAAJ;IACA;EACD;;EAED,MAAMG,mBAAmB,GAAGZ,2BAA2B,CAACO,KAAK,CAACM,QAAN,EAAD,EAAmB;IACxEC,YAAY,EAAEL,MAAM,CAACM;EADmD,CAAnB,CAAvD;EAGA,MAAMC,eAAe,GAAGX,gBAAgB,CAACE,KAAK,CAACM,QAAN,EAAD,CAAhB,IAAsC,EAA9D;;EAEA,IACED,mBADF,aACEA,mBADF,eACEA,mBAAmB,CAAEK,KAArB,CAA4BC,kBAAD,IACzBF,eAAe,CAACG,QAAhB,CAAyBD,kBAAzB,CADF,CADF,EAIE;IACA;EACD;;EAGDX,KAAK,CAACa,QAAN,CAAejB,YAAY,EAA3B;EAEAkB,KAAK,CAAE,wCAAuCZ,MAAM,CAACM,OAAQ,EAAxD,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEUG,OAAD,IAAa;IAChBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqB,SAArB;IACAlB,KAAK,CAACa,QAAN,CAAehB,cAAc,CAACH,SAAS,CAACwB,OAAD,CAAV,CAA7B;EACH,CALH,EAMGG,KANH,CAMS,MAAK;IACVF,OAAO,CAACC,GAAR,CAAY,eAAZ;IACApB,KAAK,CAACa,QAAN,CAAerB,WAAW,EAA1B;EACD,CATH;AAUD,CAhCM"},"metadata":{},"sourceType":"module"}